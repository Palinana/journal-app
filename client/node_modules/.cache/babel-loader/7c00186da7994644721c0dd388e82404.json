{"ast":null,"code":"import _defineProperty from \"/Users/palina/work/journal-app/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/palina/work/journal-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/palina/work/journal-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/palina/work/journal-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/palina/work/journal-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/palina/work/journal-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/palina/work/journal-app/client/src/components/UserEntries.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchEntries } from '../store/entry';\nimport { fetchUser } from '../store/user';\n\nvar UserEntries =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserEntries, _Component);\n\n  function UserEntries() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserEntries);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserEntries)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    return _this;\n  }\n\n  _createClass(UserEntries, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userId = this.props.match.params.userId;\n      this.props.getEntries(userId);\n      this.props.getUser(userId);\n    }\n  }, {\n    key: \"getMonthDays\",\n    value: function getMonthDays(number) {\n      var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n      var month = months[number - 1];\n      return month;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var userId = this.props.match.params.userId;\n      var userName = this.props.username;\n      var entries = this.props.entries;\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container__content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container__content-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"container__content-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Hello, \", React.createElement(\"span\", {\n        className: \"user-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, userName))), React.createElement(\"div\", {\n        className: \"container__content-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/users/\".concat(userId, \"/entries/add\"),\n        className: \"btn-header margin-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Add Entry\"), React.createElement(Link, {\n        to: \"/\",\n        className: \"btn-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Logout\"))), React.createElement(\"div\", {\n        className: \"container__heading-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"container__heading-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"All Entries:\")), React.createElement(\"div\", {\n        className: \"container__padding-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, entries.length ? entries.map(function (entry) {\n        return React.createElement(\"div\", {\n          className: \"first\",\n          key: entry.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"second\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"color-secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, entry.createdAt.slice(8, 10)), React.createElement(\"span\", {\n          className: \"color-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, _this2.getMonthDays(entry.createdAt.slice(5, 7))), React.createElement(\"span\", {\n          className: \"color-tertiary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, entry.createdAt.slice(0, 4)))), React.createElement(\"div\", {\n          className: \"third\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/users/\".concat(userId, \"/entries/\").concat(entry.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          className: \"entry-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, entry.name)), React.createElement(\"p\", {\n          className: \"entry-description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, entry.description)));\n      }) : React.createElement(\"h1\", {\n        className: \"heading-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"You have no entries\")))));\n    }\n  }]);\n\n  return UserEntries;\n}(Component);\n\nvar mapState = function mapState(state) {\n  return {\n    username: state.user.username,\n    userId: state.user.id,\n    entries: state.entry\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    getEntries: function getEntries(id) {\n      dispatch(fetchEntries(id));\n    },\n    getUser: function getUser(id) {\n      dispatch(fetchUser(id));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(UserEntries);","map":{"version":3,"sources":["/Users/palina/work/journal-app/client/src/components/UserEntries.js"],"names":["React","Component","Link","connect","fetchEntries","fetchUser","UserEntries","onChange","e","setState","target","name","value","userId","props","match","params","getEntries","getUser","number","months","month","userName","username","entries","length","map","entry","id","createdAt","slice","getMonthDays","description","mapState","state","user","mapDispatch","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchEntries } from '../store/entry';\nimport { fetchUser } from '../store/user';\n\nclass UserEntries extends Component {\n\n    componentDidMount(){\n        const userId = this.props.match.params.userId;\n        this.props.getEntries(userId);\n        this.props.getUser(userId);\n    }\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n    getMonthDays(number) {\n        const months = ['January','February','March','April','May','June','July','August','September','October','November','December'];\n        let month = months[number-1];\n        return month;\n    }\n    \n    render() {\n        const userId = this.props.match.params.userId;\n        const userName = this.props.username;\n\n        const entries = this.props.entries\n\n        return (\n            <div className=\"wrapper\">\n                <div className=\"row\">\n                    <div className=\"dashboard\">\n                        <div className=\"container__content\">\n                            <div className=\"container__content-left\">\n                                <h2 className=\"container__content-user\">\n                                    Hello, <span className=\"user-name\">{ userName }</span>\n                                </h2>\n                            </div>\n\n                            <div className=\"container__content-right\">\n                                <Link to={`/users/${userId}/entries/add`} className=\"btn-header margin-text\">Add Entry</Link>\n                                <Link to={`/`} className=\"btn-header\">Logout</Link>\n                            </div>\n                        </div>\n\n                        <div className=\"container__heading-text\">\n                            <h2 className=\"container__heading-primary\">All Entries:</h2>\n                        </div>\n\n                        <div className=\"container__padding-box\">\n                            { entries.length ? entries.map(entry => {\n                                return (   \n                                    <div className=\"first\" key={entry.id}>\n                                        <div className=\"second\">\n                                            <h2>\n                                                <span className=\"color-secondary\">{entry.createdAt.slice(8,10)}</span>\n                                                <span className=\"color-primary\">{this.getMonthDays(entry.createdAt.slice(5,7))}</span>\n                                                <span className=\"color-tertiary\">{entry.createdAt.slice(0,4)}</span>\n                                            </h2>\n                                        </div>\n                                        <div className=\"third\">\n                                            <Link to={`/users/${userId}/entries/${entry.id}`}><h2 className=\"entry-name\">{entry.name}</h2></Link>\n                                            <p className=\"entry-description\">{entry.description}</p>\n                                        </div>\n                                    </div>\n                                )\n                            }) : <h1 className=\"heading-secondary\">You have no entries</h1> }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapState = state => {\n    return {\n        username: state.user.username,\n        userId: state.user.id,\n        entries: state.entry\n    }\n}\n\nconst mapDispatch = dispatch => {\n    return {\n        getEntries: (id) => {\n            dispatch(fetchEntries(id));\n        },\n        getUser: (id) => {\n            dispatch(fetchUser(id));\n        }\n\n    }\n}\n\nexport default connect(mapState, mapDispatch)(UserEntries);"]},"metadata":{},"sourceType":"module"}