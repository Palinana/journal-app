{"ast":null,"code":"import _toConsumableArray from \"/Users/palina/work/journal-app/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport axios from 'axios'; //ACTION TYPES\n\nvar GET_ENTRY = 'GET_ENTRY';\nvar GET_ENTRIES = 'GET_ENTRIES';\nvar ADD_ENTRY = 'ADD_ENTRY'; //ACTION CREATORS\n\nvar getEntries = function getEntries(entries) {\n  return {\n    type: GET_ENTRIES,\n    entries: entries\n  };\n};\n\nvar getEntry = function getEntry(entry) {\n  return {\n    type: GET_ENTRY,\n    entry: entry\n  };\n};\n\nvar addEntry = function addEntry(newEntry) {\n  return {\n    type: ADD_ENTRY,\n    newEntry: newEntry\n  };\n}; //THUNKS\n\n\nexport var fetchEntries = function fetchEntries(userId) {\n  return function (dispatch) {\n    axios.get(\"/api/users/\".concat(userId, \"/entries\")).then(function (res) {\n      return res.data;\n    }).then(function (entries) {\n      return dispatch(getEntries(entries));\n    }).catch(function (err) {\n      return console.error(err);\n    });\n  };\n};\nexport var fetchEntry = function fetchEntry(userId, entryId) {\n  return function (dispatch) {\n    axios.get(\"/api/users/\".concat(userId, \"/entries/\").concat(entryId)).then(function (res) {\n      return res.data;\n    }).then(function (entry) {\n      return dispatch(getEntry(entry));\n    }).catch(function (err) {\n      return console.error(err);\n    });\n  };\n};\nexport var postEntry = function postEntry(userId, newEntry) {\n  return function (dispatch) {\n    axios.post(\"/api/users/\".concat(userId, \"/entries\"), newEntry).then(function (res) {\n      return res.data;\n    }).then(function (created) {\n      return dispatch(addEntry(created));\n    }).catch(function (err) {\n      return console.error(err);\n    });\n  };\n}; //REDUCER\n\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ENTRIES:\n      return action.entries;\n\n    case GET_ENTRY:\n      return action.entry;\n\n    case ADD_ENTRY:\n      return _toConsumableArray(state).concat([action.newEntry]);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/palina/work/journal-app/client/src/store/entry.js"],"names":["axios","GET_ENTRY","GET_ENTRIES","ADD_ENTRY","getEntries","entries","type","getEntry","entry","addEntry","newEntry","fetchEntries","userId","dispatch","get","then","res","data","catch","err","console","error","fetchEntry","entryId","postEntry","post","created","state","action"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAMC,SAAS,GAAG,WAAlB;AACA,IAAMC,WAAW,GAAG,aAApB;AACA,IAAMC,SAAS,GAAG,WAAlB,C,CAEA;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,OAAO,EAAI;AAC1B,SAAO;AACLC,IAAAA,IAAI,EAAEJ,WADD;AAELG,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAIH,CALD;;AAOA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACtB,SAAO;AACLF,IAAAA,IAAI,EAAEL,SADD;AAELO,IAAAA,KAAK,EAALA;AAFK,GAAP;AAIH,CALD;;AAOA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,QAAQ,EAAI;AACzB,SAAO;AACHJ,IAAAA,IAAI,EAAEH,SADH;AAEHO,IAAAA,QAAQ,EAARA;AAFG,GAAP;AAIH,CALD,C,CAOA;;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAY;AACpC,SAAO,UAAAC,QAAQ,EAAI;AACfb,IAAAA,KAAK,CAACc,GAAN,sBAAwBF,MAAxB,eACKG,IADL,CACU,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAR;AAAA,KADb,EAEKF,IAFL,CAEU,UAAAV,OAAO;AAAA,aAAIQ,QAAQ,CAACT,UAAU,CAACC,OAAD,CAAX,CAAZ;AAAA,KAFjB,EAGKa,KAHL,CAGW,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KAHd;AAIH,GALD;AAMH,CAPM;AASP,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACV,MAAD,EAASW,OAAT,EAAqB;AAC3C,SAAO,UAAAV,QAAQ,EAAI;AACfb,IAAAA,KAAK,CAACc,GAAN,sBAAwBF,MAAxB,sBAA0CW,OAA1C,GACKR,IADL,CACU,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAR;AAAA,KADb,EAEKF,IAFL,CAEU,UAAAP,KAAK;AAAA,aAAIK,QAAQ,CAACN,QAAQ,CAACC,KAAD,CAAT,CAAZ;AAAA,KAFf,EAGKU,KAHL,CAGW,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KAHd;AAIH,GALD;AAMH,CAPM;AASP,OAAO,IAAMK,SAAS,GAAG,SAAZA,SAAY,CAACZ,MAAD,EAASF,QAAT,EAAsB;AAC3C,SAAO,UAACG,QAAD,EAAc;AACnBb,IAAAA,KAAK,CAACyB,IAAN,sBAAyBb,MAAzB,eAA2CF,QAA3C,EACOK,IADP,CACY,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAR;AAAA,KADf,EAEOF,IAFP,CAEY,UAAAW,OAAO;AAAA,aAAIb,QAAQ,CAACJ,QAAQ,CAACiB,OAAD,CAAT,CAAZ;AAAA,KAFnB,EAGOR,KAHP,CAGa,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KAHhB;AAID,GALD;AAMH,CAPM,C,CASP;;AACA,eAAe,YAA8B;AAAA,MAApBQ,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACzC,UAAQA,MAAM,CAACtB,IAAf;AACI,SAAKJ,WAAL;AACI,aAAO0B,MAAM,CAACvB,OAAd;;AACJ,SAAKJ,SAAL;AACI,aAAO2B,MAAM,CAACpB,KAAd;;AACJ,SAAKL,SAAL;AACI,gCAAWwB,KAAX,UAAkBC,MAAM,CAAClB,QAAzB;;AACJ;AACI,aAAOiB,KAAP;AARR;AAUH","sourcesContent":["import axios from 'axios';\n\n//ACTION TYPES\nconst GET_ENTRY = 'GET_ENTRY';\nconst GET_ENTRIES = 'GET_ENTRIES';\nconst ADD_ENTRY = 'ADD_ENTRY';\n\n//ACTION CREATORS\nconst getEntries = entries => {\n    return {\n      type: GET_ENTRIES,\n      entries\n    }\n}\n\nconst getEntry = entry => {\n    return {\n      type: GET_ENTRY,\n      entry\n    }\n}\n\nconst addEntry = newEntry => {\n    return {\n        type: ADD_ENTRY,\n        newEntry\n    }\n}\n\n//THUNKS\nexport const fetchEntries = (userId) => {\n    return dispatch => {\n        axios.get(`/api/users/${userId}/entries`)    \n            .then(res => res.data)\n            .then(entries => dispatch(getEntries(entries)))\n            .catch(err => console.error(err))\n    }\n}\n\nexport const fetchEntry = (userId, entryId) => {\n    return dispatch => {\n        axios.get(`/api/users/${userId}/entries/${entryId}`)\n            .then(res => res.data)\n            .then(entry => dispatch(getEntry(entry)))\n            .catch(err => console.error(err))\n    }\n}\n\nexport const postEntry = (userId, newEntry) => {\n    return (dispatch) => {\n      axios.post(`/api/users/${userId}/entries`, newEntry) \n            .then(res => res.data)\n            .then(created => dispatch(addEntry(created)))\n            .catch(err => console.error(err))\n    }\n}\n\n//REDUCER\nexport default function (state = [], action) {\n    switch (action.type) {\n        case GET_ENTRIES:\n            return action.entries\n        case GET_ENTRY:\n            return action.entry\n        case ADD_ENTRY:\n            return [...state, action.newEntry];\n        default:\n            return state\n    }\n}  "]},"metadata":{},"sourceType":"module"}